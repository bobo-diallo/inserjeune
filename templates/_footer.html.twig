{% set locale = app.session.get('_locale') is defined ? app.session.get('_locale') : 'fr' %}


<input type="text" value="{{ locale }}" style="display: none" id="inputLocale">
{# <script src="{{ asset('template/pinsupreme/bower_components/jquery/dist/jquery.min.js') }} "  type="text/javascript"></script> #}
{{ encore_entry_script_tags('script') }}
{# <script src="https://code.jquery.com/jquery-3.6.1.js"></script> #}
<script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.3/js/buttons.print.min.js"></script>
<script src="https://cdn.ckeditor.com/ckeditor5/35.2.1/classic/ckeditor.js"></script>


<script>
    function extractContent(s) {
        let span = document.createElement('span');
        span.innerHTML = s;
        if ($(span).find('.no-print').length > 0) {
            return $(span).find('*').filter(function() {
                return !$(this).hasClass('no-print');
            }).text();
        }
        return span.textContent || span.innerText;
    }

    function extractWithoutDuplicateInfo(data) {
        if (data.includes('<select') && data.includes('display:none')) {
            data = data.replace(data.substr(data.indexOf('<select')), '')
        }
        return extractContent(data);
    }

    $(document).ready(function () {
        let splitPath = window.location.toString().split('/' + getCurrentLocale() + '/');
        let jsonLangage = splitPath[0] + '/locale/' + getCurrentLocale().toLowerCase() + '_' + getCurrentLocale().toUpperCase() + '.json'

        // DataTable with export csv/excel/PDF
        let title = $('h6.element-header').first().text();
        let options = {
            language: {
                url: jsonLangage
            },
            initComplete: function () {
                $('#kz_table_wrapper input').addClass('form-control form-control-sm ');
                $('#kz_table_wrapper select').addClass('form-control form-control-sm ');
                $('#kz_table_wrapper .row').css('width', '100%');
                $('#kz_table').parent().css('width', '100%');

                $('#knp_table_wrapper input').addClass('form-control form-control-sm ')
                $('#knp_table_wrapper select').addClass('form-control form-control-sm ')
                $('#knp_table_wrapper .row').css('width', '100%')
                $('#knp_table').parent().css('width', '100%')
            },
            dom: 'Blfrtip',
            paging: true,
            buttons: {
                buttons: [{
                    extend: 'csv',
                    text: '<i class="fas fa-file-csv"></i>Export Csv',
                    title: title,
                    exportOptions: {
                        columns: ':not(.no-print)',
                        format: {
                            body: function (data, row, column, node) {
                                return extractWithoutDuplicateInfo(data);
                            }
                        }
                    },
                }, {
                    extend: 'excel',
                    text: '<i class="fa fa-file-excel"></i>Export Excel',
                    title: title,
                    exportOptions: {
                        columns: ':not(.no-print)',
                        format: {
                            body: function (data, row, column, node) {
                                return extractWithoutDuplicateInfo(data);
                            }
                        }
                    },
                }, {
                    extend: 'print',
                    text: '<i class="fa fa-print"></i>Export Print',
                    title: title,
                    exportOptions: {
                        columns: ':not(.no-print)',
                        format: {
                            body: function (data, row, column, node) {
                                return extractWithoutDuplicateInfo(data);
                            }
                        }
                    },
                }, {
                    extend: 'pdf',
                    text: '<i class="fa fa-file-pdf"></i>Export Pdf',
                    orientation: 'landscape',
                    pageSize: 'A2',
                    title: title,
                    className: 'printDashboardPdf',
                    exportOptions: {
                        columns: ':not(.no-print)',
                        format: {
                            body: function (data, row, column, node) {
                                return extractWithoutDuplicateInfo(data);
                            }
                        }
                    },
                    customize: function (doc) {
                        // Compter le nombre de colonnes
                        const columnCount = doc.content[1].table.body[0].length;
                        doc.pageOrientation = 'landscape';

                        // Ajuster les marges
                        doc.pageMargins = [20, 40, 20, 40]; // [gauche, haut, droite, bas]

                        // Adapter automatiquement la largeur des colonnes
                        doc.content[1].table.widths = Array(columnCount).fill('*');

                        // RÃ©duire la police si beaucoup de colonnes
                        if (columnCount > 12) {
                            doc.defaultStyle.fontSize = 7;
                            doc.styles.tableHeader.fontSize = 8;
                        } else {
                            doc.defaultStyle.fontSize = 8;
                            doc.styles.tableHeader.fontSize = 9;
                        }

                        // Optimiser l'espacement
                        doc.content[1].table.layout = {
                            hLineWidth: function(i) { return 0.5; },
                            vLineWidth: function(i) { return 0.5; },
                            paddingLeft: function(i) { return 3; },
                            paddingRight: function(i) { return 3; },
                            paddingTop: function(i) { return 2; },
                            paddingBottom: function(i) { return 2; }
                        };
                    }
                }],
                dom: {
                    container: {
                        className: 'dt-buttons kz-print-tools'
                    },
                    button: {
                        className: 'btn btn-primary btn-dashboard rounded'
                    }
                }
            },
            retrieve: false
        };
        let optionsWithRetrieve = options.retrieve = true;

        $('#kz_table').DataTable(options);
        $('#kz_table_retrieve').DataTable(optionsWithRetrieve);
        $('#kz_table_with_export').DataTable(options);
        $('#kz_table_with_width_export').DataTable(options);

        // disable jquery datatable pagination
        options.paging = false;
        $('#knp_table').DataTable(options);

        // Export Dashboard to PDF

        $('#printDashboard').on('click', function (e) {
            printDashboardToPDF(e);
        })
    });

</script>
