{% extends 'company/content.html.twig' %}

{% block referencement_h1 %}
    {{ parent() }} {{ 'referencement.school_company_enrollment' | trans }}
{% endblock%}

{% block body %}
    <div class="content-i">
        <div class="content-box">
            {% set rowNumber = 0 %}
            <div id="test1"></div>
            {% set lien_images = asset('build/images/icon/')  %}
            <div class="element-wrapper">
                {%  if app.user.roles|role =="Administrateur" %}
                    <img src="{{ asset('build/images/icon/degree.png') }}" alt="locality" class="title-icon" style="margin-bottom: -35px;">
                {% endif %}
                <h6 class="element-header">{{ 'school.enrolment_of_companies' | trans }}</h6>
                <input id="lienImages" value="{{ lien_images }}" hidden="hidden">
                <div class="element-box">
                    {#<script>alert("role =" + {{ app.user.roles|role }})</script>#}
                    {%  if app.user.roles|role =="Etablissement" %}
                        <div class="controls-above-table">
                            <div class="row">
                                <div class="col-sm-6">
                                    {#                                    {% set lien_images = asset('build/images/icon/')  %}#}
                                    <button class="btn btn-sm btn-primary" id="addCompany" onclick="addRowCompany('{{ lien_images }}')">Ajouter Entreprise</button>
                                    <a class="btn btn-sm btn-primary" href="#" id="importCSV">Import CSV</a>
                                    <a class="btn btn-sm btn-primary" href="{{ asset('downloads/company_enrollment_template.csv') }}" download><i class="fa fa-download" aria-hidden="true"></i> Template CSV</a>
                                    <input type="file" accept=".csv" hidden="hidden"  id="inputImportCSV"/>
                                    <img src="{{ asset('build/images/loading.gif') }}" alt="loading" id="idLoading" hidden="hidden">
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    <div class="table-responsive">
                        <table id="kz_table" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
                            <thead>
                            <tr>
                                <th>Actions</th>
                                <th>{{ 'menu.name' | trans }}</th>
                                <th> {{ 'menu.region' | trans }} </th>
                                <th>{{ 'menu.city' | trans }}</th>
                                <th>{{ 'menu.phone' | trans }}</th>
                                <th>{{ 'menu.email' | trans }}</th>
                                <th>{{ 'menu.sector' | trans }}</th>
                                <th> {{ 'menu.legals_status' | trans }} </th>
                                <th>{{ 'menu.password' | trans }}</th>
                            </tr>
                            </thead>
                            <tbody id="tbodyCompany">
                            {% for company in companies %}
                                {% set rowNumber = rowNumber + 1%}
                                {{ app.session.set('rowNumber', rowNumber) }}
                                {{ add_row_company(rowNumber, company, asset('build/images/icon/')) }}
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="menu-low-enroll">
                    <button class="btn btn-sm btn-primary" id="editAll" onclick="editAll()">{{ 'menu.edit_all' | trans }}</button>
                    <button class="btn btn-sm btn-primary" id="save" onclick="saveEdit('')">{{ 'menu.save_edit' | trans }}</button>
                    <button class="btn btn-sm btn-primary" id="selectAll" onclick="selectAll()">{{ 'menu.select_all' | trans }}</button>
                    <button class="btn btn-sm btn-primary" id="save" onclick="removeSelect('')">{{ 'menu.delete_selected' | trans }}</button>
                    <button class="btn btn-sm btn-primary" id="save" onclick="sendEmailSelect('')">{{ 'menu.select_send_email' | trans }}</button>
                </div>
            </div>
            <input style="display: none" id="nbRowImported" value="0">
            <input style="display: none" id="rowNumber" value="{{ rowNumber }}">
            <input style="display: none" id="selectedCountry" value="{{ app.user.country.id }}">
            <select style="display: none"  id="regions">
                {% for region in regions  %}
                    <option value="{{ region.id }}">{{ region.name }}</option>
                {% endfor %}
            </select>
            <select style="display: none"  id="sectorAreas">
                {% for sectorArea in sectorAreas  %}
                    <option value="{{ sectorArea.id }}">{{ sectorArea.name }}</option>
                {% endfor %}
            </select>
            <select style="display: none"  id="legalStatus">
                {% for status in legalStatus  %}
                    <option value="{{ status.id }}">{{ status.name }}</option>
                {% endfor %}
            </select>
        </div>
    </div>

{% endblock %}

{% block js %}
    <script>
        let translations = [];
        getTranslation().then (function (translation) {
            translations = translation
            // console.log(translations);
        }) ;

        let saveMulti=false;
        function checkAllShowMode() {
            let allShow = true;
            $('.enrolCheck').each(function () {
                if($(this).css("display") == "none")
                    allShow = false;
            })
            return allShow;
        }

        function selectAll() {
            if(checkAllShowMode() == true) {
                if($("#remove1").prop( "checked") == true) {
                    $('.enrolCheck').each(function () {
                        $(this).prop("checked", false);
                    })
                } else {
                    $('.enrolCheck').each(function () {
                        $(this).prop("checked", true);
                    })
                }
            } else {
                alert(translations["js.you_cannot_select_everything_if_line_edit_mode"])
            }
        }

        function editAll() {
            let rowNumber = $('#rowNumber').val();
            if($("#save1").css("display") == "none") {
                for (let i = 1; i <= rowNumber; i++) {
                    row = $("#edit" + i ).attr('id').replace("edit","#company");

                    $("#save" + i).css("display", "inline-block");
                    $("#cancel" + i).css("display", "inline-block");
                    $("#edit" + i).css("display", "none");
                    $("#remove" + i).css("display", "none");
                    $("#remove" + i).prop( "checked", false );

                    $(row).each(function() {
                        $(this).find('input').each(function () {
                            if(!$(this).hasClass("enrolCheck"))
                                $(this).css("display", "inline-block");
                        });
                        $(this).find('select').each(function () {
                            $(this).css("display", "inline-block");
                        });
                        $(this).find('p').each(function () {
                            $(this).css("display", "none");
                        });
                    })
                }
            } else {
                for (let i = 1; i <= rowNumber; i++) {
                    row = $("#edit" + i ).attr('id').replace("edit","#company");

                    $("#save" + i).css("display", "none");
                    $("#cancel" + i).css("display", "none");
                    $("#edit" + i).css("display", "inline-block");
                    $("#remove" + i).css("display", "inline-block");

                    $(row).each(function() {
                        $(this).find('input').each(function () {
                            if(!$(this).hasClass("enrolCheck"))
                                $(this).css("display", "none");
                        });
                        $(this).find('select').each(function () {
                            $(this).css("display", "none");
                        });
                        $(this).find('p').each(function () {
                            $(this).css("display", "inline-block");
                        });
                    })
                }
            }
        }

        function saveEdit() {
            saveMulti=true;
            let rowNumber = $('#rowNumber').val();
            let edits = [];

            for (let i = 1; i <= rowNumber; i++) {
                let saveId = $('#save' + i);
                if (saveId.css('display') != 'none' && saveId.attr('id') != null) {
                    edits.push(saveId.attr('id').replace('save', ''));
                }
            }

            if (edits.length > 0) {
                let errorNumber = 0;
                if (confirm(translations["js.sure_edit_these_entries_part1"] + " " + edits.length + " " + translations["js.sure_edit_these_entries_part2"])) {
                    for (let i = 0; i < edits.length; i++) {
                        if ($('#save' + edits[i]).css('display') != 'none') {
                            errorNumber += displayButton('save', edits[i], 'all');
                        }
                    }

                    if (errorNumber > 0) {
                        alert(translations['js.Please_complete_all_required_fields']);
                    }
                }
            } else {
                alert(translations["js.no_entry_to_validate"]);
            }
            saveMulti=false;
        }

        function removeSelect() {
            if(checkAllShowMode() == true) {
                let removes=[];
                $('.enrolCheck').each(function () {
                    if ($(this).prop("checked") == true)
                        removes.push($(this).parent().find("span").first().attr("id").replaceAll("id", ""));
                })
                if(removes.length > 0) {
                    let msg = "Etes vous sûr de supprimer cette entrée ?";
                    if(removes.length > 1)
                        msg = "Etes vous sûr de supprimer ces " + removes.length + " entrées ?";

                    if (confirm(msg)) {
                        for (let i=0; i<removes.length; i++ ) {
                            // alert("remove " + removes[i]);
                            displayButton('remove', removes[i], 'all');
                        }
                    }
                }
            } else {
                alert(translations["js.you_cannot_delete_entries_if_line_in_edit_mode"])
            }
        }

        function sendEmailSelect() {
            if(checkAllShowMode() == true) {
                let err = [];
                let mailsTo = [];
                $('.enrolCheck').each(function () {
                    if ($(this).prop("checked") == true) {
                        let userId = $(this).parent().find("span").first();
                        let userEmail = '#' + userId.attr("id").replaceAll("id", "p_email");
                        let userPwd = '#' + userId.attr("id").replaceAll("id", "p_password");
                        let userFirstName = '#' + userId.attr("id").replaceAll("id", "p_firstname");
                        let userName = '#' + userId.attr("id").replaceAll("id", "p_lastname");

                        if ($(userEmail).text() && $(userPwd).text()) {
                            mailsTo.push($('#' + userId.attr('id')).text());

                        } else if (!$(userEmail).text()) {
                            err.push(translations["js.no_email"] + " " + $(userFirstName).text() + " " + $(userName).text())

                        } else {
                            err.push(translations["js.no_password"] + " " + $(userFirstName).text() + " " + $(userName).text())
                        }
                    }
                })
                if(err.length == 0 ) {
                    if (mailsTo.length > 0) {
                        // if (confirm("Etes vous sûr de vouloir envoyer les notification ?")) {
                        if (confirm(translations["js.sure_send_notifications"])) {
                            $('#idLoading').removeAttr('hidden');
                            $.post(getBaseUrl() + 'sendNotificationEnrollmentCompanies', {'company_ids': mailsTo})
                                .done(function (data) {
                                    $('#idLoading').attr('hidden', 'hidden');
                                    alert(translations['js.emails_sent_successfully']);
                                    $('#tbodyCompany input').prop('checked', false);
                                })
                                .fail(function () {
                                    $('#idLoading').attr('hidden', 'hidden');
                                    alert(translations['js.error_while_sending_emails']);
                                })
                        }
                    }
                } else {
                    alert(err);
                }
            } else {
                alert(translations["js.you_cannot_send_an_email_if_line_in_edit_mode"])
            }
        }

        function addRowCompany(assetLocationIcon) {
            let rowNumber = $('#rowNumber').val();
            rowNumber++;
            $('#rowNumber').val(rowNumber);
            let colorBack = "odd";

            let html = '<tr class="enrollcompany ' + colorBack + '" id="company'+ rowNumber + '" role="row">';
            html += '    <td class="row-actions sorting_1">';
            html += '        <span style="display: none" id="id'+ rowNumber + '"></span>';
            html += '        <button id="edit'+ rowNumber + '" onclick="displayButton(\'edit\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'edit_16.png"></button>';
            // html += '        <button style="display: none"  id="remove'+ rowNumber + '" onclick="displayButton(\'remove\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'delete.png"></button>';
            html += '        <input style="display: none" type="checkbox" class="enrolCheck" id="remove'+ rowNumber + '" >';
            html += '        <button style="display: none" class="saveCompany" id="save'+ rowNumber + '" onclick="displayButton(\'save\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'save_16.png"></button>';
            html += '        <button style="display: none"  id="cancel'+ rowNumber + '" onclick="displayButton(\'cancel\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'cancel_16.png"></button>';
            html += '    </td>';
            html += '    <td class="tdinput"><input required id="name'+ rowNumber + '" style="display:none" value="" placeholder="nom"><p id="p_name'+ rowNumber + '"></p></td>';
            html += '    <td class="tdselect"><p id="p_selectRegion'+ rowNumber + '"></p><select required class="region" style="display:none" value="" id="selectRegion'+ rowNumber + '" ></select></td>';
            html += '    <td class="tdselect"><p id="p_selectCity'+ rowNumber + '"></p><select required class="city" style="display:flex" value="" id="selectCity'+ rowNumber + '" placeholder="Sélectionnez une région"></select></td>';
            html += '    <td class="tdinput"><input required id="phoneStandard'+ rowNumber + '" style="display:none" value="" placeholder="Mobile 1"><p id="p_phoneStandard'+ rowNumber + '"></p></td>';
            html += '    <td class="tdinput"><input id="email'+ rowNumber + '" style="display:none" value="" placeholder="email@mail.com"><p id="p_email'+ rowNumber + '"></p></td>';
            html += '    <td class="tdselect"><p id="p_selectSectorArea'+ rowNumber + '"></p><select style="display:none" required value="" id="selectSectorArea'+ rowNumber + '" placeholder="Sélectionnez un secteur"></select></td>';
            html += '    <td class="tdselect"><p id="p_selectLegalStatus'+ rowNumber + '"></p><select style="display:none" required value="" id="selectLegalStatus'+ rowNumber + '"  placeholder="Sélectionnez un statut"></select></td>';
            html += '    <td class="tdinput"><p id="p_password'+ rowNumber + '"></p></td>';

            html += '</tr>';

            $('#tbodyCompany').append(html);
            let idtest = "#edit"+ rowNumber;
            $( idtest ).addClass( "editCompany" );

            addOptionRegion(rowNumber);
            addOptionSectorArea(rowNumber);
            addOptionLegalStatus(rowNumber);

            // Event
            // Recherches de ville en fonction de la region
            $('#selectRegion' + rowNumber).on('change', function() {
                let $regionId = $('#selectRegion' + rowNumber + " option:selected" ).val();
                if($regionId) {
                    addOptionCity($regionId, rowNumber);
                    $("#selectCity"+rowNumber).find('option').remove();
                }
            });

            // Add option de sélection de la région de l'établissement
            ($('#selectCity' + rowNumber + " option").length == 0)
            $("#selectCity"+rowNumber).append("<option value=\"\">Sélectionnez une region</option>");


            //Lancement du mode édition
            $("#edit" + rowNumber).click();
        }

        function addRowCompanyWithValue(values, callback) {
            let rowNumber = $('#rowNumber').val();
            let assetLocationIcon = $('#lienImages').val();

            rowNumber++;
            $('#rowNumber').val(rowNumber);
            let colorBack = "odd";

            let html = '<tr class="enrollcompany ' + colorBack + '" id="company'+ rowNumber + '" role="row">';
            html += '    <td class="row-actions sorting_1">';
            html += '        <span style="display: none" id="id'+ rowNumber + '"></span>';
            html += '        <button id="edit'+ rowNumber + '" onclick="displayButton(\'edit\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'edit_16.png"></button>';
            // html += '        <button style="display: none"  id="remove'+ rowNumber + '" onclick="displayButton(\'remove\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'delete.png"></button>';
            html += '        <input style="display: none" type="checkbox" class="enrolCheck" id="remove'+ rowNumber + '" >';
            html += '        <button style="display: none" class="saveCompany"  id="save'+ rowNumber + '" onclick="displayButton(\'save\','+ rowNumber + ' , \'one\')"><img src="'+ assetLocationIcon + 'save_16.png"></button>';
            html += '        <button style="display: none"  id="cancel'+ rowNumber + '" onclick="displayButton(\'cancel\','+ rowNumber + ', \'one\')"><img src="'+ assetLocationIcon + 'cancel_16.png"></button>';
            html += '    </td>';
            html += '    <td class="tdinput"><input required id="name'+ rowNumber + '" style="display:none" value="' + values[0] + '" placeholder="nom"><p id="p_name'+ rowNumber + '"></p></td>';
            html += '    <td class="tdselect"><p id="p_selectRegion'+ rowNumber + '"></p><select required class="region" style="display:none" value="" id="selectRegion'+ rowNumber + '" ></select></td>';
            html += '    <td class="tdselect"><p id="p_selectCity'+ rowNumber + '"></p><select required class="city" style="display:flex" value="" id="selectCity'+ rowNumber + '" placeholder="Sélectionnez une région"></select></td>';
            html += '    <td class="tdinput"><input required id="phoneStandard'+ rowNumber + '" style="display:none" value="' + values[3] + '" placeholder="Mobile 1"><p id="p_phoneStandard'+ rowNumber + '"></p></td>';
            html += '    <td class="tdinput"><input id="email'+ rowNumber + '" style="display:none" value="' + values[4] + '" placeholder="email@mail.com"><p id="p_email'+ rowNumber + '"></p></td>';
            html += '    <td class="tdselect"><p id="p_selectSectorArea'+ rowNumber + '"></p><select style="display:none" required value="" id="selectSectorArea'+ rowNumber + '" placeholder="Sélectionnez un secteur"></select></td>';
            html += '    <td class="tdselect"><p id="p_selectLegalStatus'+ rowNumber + '"></p><select style="display:none" required value="" id="selectLegalStatus'+ rowNumber + '"  placeholder="Sélectionnez un statut"></select></td>';
            html += '    <td class="tdinput"><p id="p_password'+ rowNumber + '">' + values[7] + '</p></td>';

            html += '</tr>';

            $('#tbodyCompany').append(html);
            let idtest = "#edit"+ rowNumber;
            $( idtest ).addClass( "editCompany" );

            addOptionRegion(rowNumber);
            addOptionSectorArea(rowNumber);
            addOptionLegalStatus(rowNumber);


            // Event
            // Recherches de ville en fonction de la region
            $('#selectRegion' + rowNumber).on('change', function() {
                let $regionId = $('#selectRegion' + rowNumber + " option:selected" ).val();
                if ($regionId) {
                    addOptionCity($regionId, rowNumber, values[2]);
                }
            });

            // Add option de sélection de la région de l'établissement
            ($('#selectCity' + rowNumber + " option").length === 0)
            $("#selectCity"+rowNumber).append("<option value=\"\">Sélectionnez une region</option>");

            //Lancement du mode édition
            $("#edit" + rowNumber).click();

            // Selectionn option by value
            let errors = [];
            let regionSelectedId = '#selectRegion' + rowNumber;
            changeSelectOptionByValue(regionSelectedId, values[1], (isValid) => {
                if (!isValid) {
                    errors.push(`La region de la ligne ${rowNumber} n'existe pas dans le system.`);
                }
            });
            changeSelectOptionByValue('#selectSectorArea' + rowNumber, values[5], (isValid) => {
                if (!isValid) {
                    errors.push(`Le Secteur de la ligne ${rowNumber} n'existe pas dans le system.`);
                }
            });
            changeSelectOptionByValue('#selectLegalStatus' + rowNumber, values[6], (isValid) => {
                if (!isValid) {
                    errors.push(`Le statut juridique de la ligne ${rowNumber} n'existe pas dans le system.`);
                }
            });

            if (errors.length > 0) {
                callback(errors);

                return;
            }

        }

        function changeSelectOptionByValue(selectId, textValue, callback) {
            const $select = document.querySelector(selectId);
            const $options = Array.from($select.options);
            const optionToSelect = $options.find(item => item.text === textValue);

            if (optionToSelect) {
                optionToSelect.selected = true;
                $(selectId).trigger('change');
            } else {
                callback(false);
            }
        }

        function addOptionRegion(rowNumber) {
            let $idSelected = -1;
            if ($('#selectRegion' + rowNumber + ' option').length == 1) {
                $idSelected = $('#selectRegion' + rowNumber + ' option:first').val();
                $('#selectRegion' + rowNumber + ' option:first').remove();
            }
            if ($('#selectRegion' + rowNumber + ' option').length == 0) {
                $("#selectRegion" + rowNumber).append("<option value=\"\">Sélectionnez</option>");
                $("#regions option").each(function (option) {
                    if ($idSelected == $(this).val())
                        $("#selectRegion" + rowNumber).append("<option selected value=\"" + $(this).val() + "\">" + $(this).text() + "</option>");
                    else
                        $("#selectRegion" + rowNumber).append("<option value=\"" + $(this).val() + "\">" + $(this).text() + "</option>");
                });
            }
        }

        function addOptionSectorArea(rowNumber) {
            let $idSelected = -1;
            if ($('#selectSectorArea' + rowNumber + ' option').length == 1) {
                $idSelected = $('#selectSectorArea' + rowNumber + ' option:first').val();
                $('#selectSectorArea' + rowNumber + ' option:first').remove();
            }

            if ($('#selectSectorArea' + rowNumber + ' option').length == 0) {
                $("#selectSectorArea" + rowNumber).append("<option value=\"\">Sélectionnez</option>");
                $("#sectorAreas option").each(function (option) {
                    if ($idSelected == $(this).val())
                        $("#selectSectorArea" + rowNumber).append("<option selected value=\"" + $(this).val() + "\">" + $(this).text() + "</option>");
                    else
                        $("#selectSectorArea" + rowNumber).append("<option value=\"" + $(this).val() + "\">" + $(this).text() + "</option>");
                });
            }
        }

        function addOptionLegalStatus(rowNumber) {
            let $idSelected = -1;
            if ($('#selectLegalStatus' + rowNumber + ' option').length == 1) {
                $idSelected = $('#selectLegalStatus' + rowNumber + ' option:first').val();
                $('#selectLegalStatus' + rowNumber + ' option:first').remove();
            }

            if ($('#selectLegalStatus' + rowNumber + ' option').length == 0) {
                $("#selectLegalStatus" + rowNumber).append("<option value=\"\">Sélectionnez</option>");
                $("#legalStatus option").each(function (option) {
                    if ($idSelected == $(this).val())

                        $("#selectLegalStatus" + rowNumber).append("<option selected value=\"" + $(this).val() + "\">" + $(this).text() + "</option>");
                    else
                        $("#selectLegalStatus" + rowNumber).append("<option value=\"" + $(this).val() + "\">" + $(this).text() + "</option>");
                });
            }
        }

        function addOptionCity($region, rowNumber, optionValue) {
            let dirs = window.location.href.split('/');
            let $locationRef = "";
            for (let i = 0; i < dirs.length - 1; i++) {
                $locationRef += dirs[i] + '/';
            }

            // appel Ajax sur bdd
            $.get($locationRef + $region + '/cityByRegion').done(function (cities) {
                // recupere le Id du city existant
                let $idSelected = -1;
                if ($('#selectCity' + rowNumber + ' option').length == 1) {
                    $idSelected = $('#selectCity' + rowNumber + ' option:first').val();
                    $('#selectCity' + rowNumber + ' option:first').remove();
                }
                $("#selectCity" + rowNumber).append("<option selected value=\"\">Sélectionnez</option>");
                cities.forEach((city) => {
                    if ($idSelected == city['id'])
                        $("#selectCity" + rowNumber).append("<option selected value=\"" + city['id'] + "\">" + city['name'] + "</option>");
                    else
                        $("#selectCity" + rowNumber).append("<option value=\"" + city['id'] + "\">" + city['name'] + "</option>");
                });

                if (optionValue !== undefined) {
                    changeSelectOptionByValue('#selectCity' + rowNumber, optionValue, () => alert(translations['js.the_city_of_the_line_not_exist_in_the_system_part1'] + ' ' + ${rowNumber} + ' ' + translations['js.the_city_of_the_line_not_exist_in_the_system_part2']));
                }
            })
        }

        function displayButton(action, rowNumber, type) {
            let save = "#save" + rowNumber;
            let cancel = "#cancel" + rowNumber;
            let edit = "#edit" + rowNumber;
            let remove = "#remove" + rowNumber;

            /* récupération de l'id de l'entreprise si existant */
            let companyId = $("#id" + rowNumber).text();

            /* test si tout les champs sont remplis */
            /* ------------------------------------ */
            let check = true;
            let errorNumber = 0;
            if(action=="save") {
                $(row).each(function () {
                    $(this).find('input').each(function () {
                        if($(this).prop("required") == true) {
                            if ($(this).val() == '') {
                                check = false;
                                $(this).css({"background-color": "#ffd5d5"});
                                errorNumber++;
                            } else {
                                $(this).css({"background-color": "white"});
                            }
                        }
                    })
                    $(this).find('select').each(function () {
                        if($(this).prop("required") == true) {

                            if (($(this).val() == "") ||  (($(this).val())&&($(this).val().toLowerCase() == "selectionnez"))) {
                                check = false;
                                $(this).css({"background-color": "#ffd5d5"});
                                errorNumber++;
                            } else {
                                //console.log($(this).val())
                                $(this).css({"background-color": "white"});
                            }
                        }
                    })
                });
            }

            /* Affichage des buttons */
            /* --------------------- */
            if (action == "edit") {
                $(save).css("display", "inline-block");
                $(cancel).css("display", "inline-block");
                $(edit).css("display", "none");
                $(remove).css("display", "none");
                $(remove).prop( "checked", false );

            } else if ((action == "save") || (action == "cancel")) {
                $(save).css("display", "none");
                $(cancel).css("display", "none");
                $(edit).css("display", "inline-block");
                $(remove).css("display", "inline-block");
            }
            /* Affichage des inputs, select et des p */
            /* ------------------------------------- */
            row = $(edit).attr('id').replace("edit", "#company");
            //console.log(row);
            $(row).each(function () {
                if (action == "edit") {
                    $(this).find('input').each(function () {
                        if(!$(this).hasClass("enrolCheck"))
                            $(this).css("display", "inline-block");
                    });
                    $(this).find('select').each(function () {
                        $(this).css("display", "inline-block");
                    });
                    $(this).find('p').each(function () {
                        $(this).css("display", "none");
                    });

                } else if ((action == "save") && (check == true)) {
                    $(this).find('input').each(function () {
                        if(!$(this).hasClass("enrolCheck"))
                            $(this).css("display", "none");
                    });
                    $(this).find('select').each(function () {
                        $(this).css("display", "none");
                    });
                    $(this).find('p').each(function () {
                        $(this).css("display", "inline-block");
                    });

                } else if (action == "cancel") {
                    $(this).find('input').each(function () {
                        if(!$(this).hasClass("enrolCheck"))
                            $(this).css("display", "none");
                    });
                    $(this).find('select').each(function () {
                        $(this).css("display", "none");
                    });
                    $(this).find('p').each(function () {
                        $(this).css("display", "inline-block");
                    });
                }
            });

            /* Appels Ajax pour la sauvegarde et la suppression  */
            /* ------------------------------------------------- */
            if(action=="save") {
                /* test si tout les champs sont remplis */
                /* ------------------------------------ */
                let check = true;
                if(action=="save") {
                    $(row).each(function () {
                        $(this).find('input').each(function () {
                            if($(this).prop("required") == true) {
                                if ($(this).val() == '') {
                                    check = false;
                                    $(this).css({"background-color": "#ffd5d5"});
                                } else {
                                    $(this).css({"background-color": "white"});
                                }
                            }
                        })
                        $(this).find('select').each(function () {
                            if($(this).prop("required") == true) {

                                if (($(this).val() == "") ||  (($(this).val())&&($(this).val().toLowerCase() == "selectionnez"))) {
                                    check = false;
                                    $(this).css({"background-color": "#ffd5d5"});
                                } else {
                                    //console.log($(this).val())
                                    $(this).css({"background-color": "white"});
                                }
                            }
                        })
                    })
                }

                //console.log("check=" + check);
                /* sauvegarde */
                /* ---------- */
                if(check == true) {
                    let resConfirm = false;
                    if(type == "one") {
                        resConfirm = true;
                        let msg = translations["js.sure_edit_this_entry"]
                        if ($("#p_phoneStandard" + rowNumber).text() == "") {
                            msg = translations["js.sure_create_this_entry"]
                        }
                        if (confirm(msg)) {
                            resConfirm = false;
                        }
                    }
                    if (!resConfirm) {
                        /* creation de la table des données */
                        /* -------------------------------- */
                        let company = [];
                        //console.log("row=" + row);
                        company = new Object();
                        let strCompany = "";

                        /* récupération de l'id de l'entreprise si existant et du selectedCountry du School */
                        company["id"] = $("#id" + rowNumber).text();
                        company["selectedCountry"] = $("#selectedCountry").val();
                        strCompany += "id=" + $("#id" + rowNumber).text();

                        /* récupération des données saisies dans les inputs */
                        /*------------------------------------------------- */
                        $(row).each(function () {
                            $(this).find('input').each(function () {
                                if(!$(this).hasClass("enrolCheck")) {
                                    /*récupération du Label en enlevant le numero du rowNumber */
                                    let nbDigitsRowNumber = rowNumber.toString().length;

                                    let inputLabel = $(this).attr('id');

                                    inputLabel = inputLabel.substring(0, inputLabel.length - nbDigitsRowNumber);
                                    company[inputLabel] = $(this).val();

                                    if ($(this).val().length > 0) {
                                        strCompany += "&" + inputLabel + "=" + $(this).val();
                                    }
                                }
                            });
                            $(this).find('select').each(function () {
                                /*récupération du Label en enlevant le numero du rowNumber */
                                let nbDigitsRowNumber = rowNumber.toString().length;

                                let selectLabel = $(this).attr('id');
                                selectLabel = selectLabel.substring(0, selectLabel.length - nbDigitsRowNumber);
                                //console.log(inputLabel + " | " + nbDigitsRowNumber + " | " + rowNumber);

                                let label = selectLabel;
                                label = label.replace('select', '');
                                company[label] = $(this).val();
                                if($(this).val().length>0) {
                                    strCompany += "&" + label + "=" + $(this).val();
                                }

                                /* mise a jour du selected dans l'option */
                                $(this).find('option').each(function () {
                                    if(company[label] == $(this).val()) {
                                        $(this).attr("selected","selected");
                                        //console.log("-test--> " + company[label] + " | "+ $(this).val() + " | " + $(this).text());
                                    }
                                })
                            });
                        });

                        /* appel ajax en get pour sauvegarder l'entreprise */
                        /* ----------------------------------------------- */
                        let dirs = window.location.href.split('/');
                        let $locationRef = "";
                        for (let i = 0; i < dirs.length - 1; i++)
                            $locationRef += dirs[i] + '/';

                        //console.log("Id company=" + company["id"]);
                        if(companyId == "") companyId = -1;
                        $.get($locationRef + companyId + '/enrollCompanyUpdate/', company).done(function (res) {

                            /* affichage des erreurs rencontrées */
                            /* --------------------------------- */
                            if (res[1].length > 0) {
                                // alert(res[1].length + " problèmes rencontrés lors de l'update, opération annuée");

                                for (let i = 0; i < res[1].length; i++)
                                    alert(res[1][i]);

                            /* mise à jour de l'affichage des éléments en mode show */
                            /* ---------------------------------------------------- */
                            } else  {
                                row = "#company" + rowNumber;

                                //$(remove).css("display", "inline-block");
                                $("#p_password" + rowNumber).html(res[0]["pwd"]);
                                $("#id" + rowNumber).text(res[0]["id"]);

                                $(row).each(function () {
                                    $(this).find('input').each(function () {
                                        if(!$(this).hasClass("enrolCheck")) {
                                            /*récupération du Label en enlevant le numero du rowNumber */
                                            companyId = $(this).prop("id");
                                            let inputValue = $(this).val();

                                            let p_id = "#p_" + companyId;
                                            $(p_id).html(inputValue);
                                        }
                                    });
                                    $(this).find('select option').each(function () {
                                        if($(this).val() != "") {
                                            if ($(this).attr("selected") == "selected") {
                                                /*récupération du Label en enlevant le numero du rowNumber */
                                                companyId = $(this).parent().prop("id");
                                                let inputValue = $(this).text();

                                                let p_id = "#p_" + companyId;
                                                $(p_id).text(inputValue);
                                                //console.log(p_id + " Selected -->> " + inputValue);
                                            }
                                        }
                                    });
                                })
                            }
                        }, "json");
                    };
                }

            } else if(action=="remove") {
                /* appel ajax en get pour supprimer l'entreprise */
                /* --------------------------------------------- */
                //data = {"firstname":"Raoul", "lastname":"Dupont"};
                let dirs = window.location.href.split('/');
                let $locationRef = "";
                for (let i = 0; i < dirs.length - 1; i++)
                    $locationRef += dirs[i] + '/';

                //if(confirm ("Etes vous sûr de supprimer cette entrée ?" )) {
                    /* creation de la table des données */
                    /* -------------------------------- */
                    let company = [];
                    company = new Object();

                    /* récupération de l'id de l'entreprise si existant */
                    companyId = $("#id" + rowNumber).text();

                    if(companyId) {
                        $.get($locationRef + companyId + '/companyDelete/').done(function (res) {
                            /* affichage des erreurs rencontrées */
                            /* --------------------------------- */
                            if (res[1].length > 0) {
                                alert(res[1].length + " problèmes rencontrés lors de l'update, opération annuée");
                            } else {
                                //alert( "Entreprise supprimée avec succès");
                                $("#company" + rowNumber).remove();
                            }
                        }, "json");
                    } else {
                        $("#company" + rowNumber).remove();
                    }
                //}
            }
            if(errorNumber > 0) {
                if (saveMulti == false) {
                    alert(translations['js.please_complete_all_required_fields']);
                }
            }
            return errorNumber;
        };

    </script>
    <script>
        $(document).ready(function () {
            /* Mise à jour des options dans les selects de PersonDegrees existants */
            /* ------------------------------------------------------------------- */
            for (let $i = 1 ; $i <= $('#rowNumber').val(); $i++) {
                addOptionRegion($i);
                addOptionSectorArea($i);
                addOptionLegalStatus($i);
            }

            // Event
            // Recherches de ville en fonction de la region
            $('.selectRegion').on('change', function() {
                id= $(this).attr("id").replaceAll("selectRegion","");
                let $regionId = $('#selectRegion' + id + " option:selected" ).val();
                if($regionId) {
                    addOptionCity($regionId, id);
                    $("#selectAddressCity"+id).find('option').remove();
                }
            });


            // // Gestion import CSV
            $('#importCSV').click(function (e) {
                e.preventDefault();
                $('#inputImportCSV').trigger('click');
            });
            $('#inputImportCSV').change(function (e) {
                e.preventDefault();
                let file = document.getElementById("inputImportCSV").files[0];

                if (file) {
                    let reader = new FileReader();
                    reader.readAsText(file, 'UTF-8');

                    reader.onload = function (evt) {
                        let data = evt.target.result.split("\n");
                        let errorFields = [];

                        // Valid file
                        let header = data[0].replaceAll('\r',"");
                        if(header[header.length-1] == ',')
                            header = header.substring(0, header.length - 1);

                        let fields = header.split(',') ;
                        console.log(fields);
                        let fieldNames = {
                            "nomField": null,
                            "regionField": null,
                            "villeField": null,
                            "telephoneField": null,
                            "emailField": null,
                            "secteurField": null,
                            "statutJuridiqueField": null
                        };
                        let fieldsOrder = [
                            "nomField",
                            "regionField",
                            "villeField",
                            "telephoneField",
                            "emailField",
                            "secteurField",
                            "statutJuridiqueField"
                        ];


                        for(let i=0; i<fields.length; i++) {
                            let field = fields[i].replaceAll('\"','').toLowerCase();

                            // fiedNames in FR
                            switch (field) {
                                case 'nom' : fieldNames['nomField'] = i; break;
                                case 'région' : fieldNames['regionField'] = i; break;
                                case 'ville' : fieldNames['villeField'] = i; break;
                                case 'téléphone' : fieldNames['telephoneField'] = i; break;
                                case 'email' : fieldNames['emailField'] = i; break;
                                case 'secteur' : fieldNames['secteurField'] = i; break;
                                case 'statut juridique' : fieldNames['statutJuridiqueField'] = i; break;
                                default :
                                    errorFields.push(fields[i]);
                            }
                        }

                        // check bad fieldName syntax
                        if (errorFields.length > 0) {
                            let errorMsg = "Mauvaise syntaxe des champs suivant : ";
                            errorFields.forEach(function (error) {
                                errorMsg += error + ', ';
                            })
                            errorMsg += "  Champs autorisés =  nom, région, ville, téléphone, email, secteur, statut juridique" ;
                            alert(errorMsg);
                            return;
                        }

                        // check minimum data fields
                        if ((fieldNames['nomField'] == null) ||
                            (fieldNames['telephoneField'] ==null)) {
                            alert(translations['js.file_invalid_fields_name_and_telephone_mandatory']);
                            return;
                        }
                        // let validHeader = '"Nom","Région","Ville","Téléphone","Email","Secteur","Statut juridique"';
                        // if (header !== validHeader) {
                        //     alert(`Le fichier n'est pas valide. Le fichier doit avoir une entête comme: \n ${validHeader} `);
                        //     return;
                        // }

                        data.shift();
                        let errors = [];
                        data.forEach(function (row) {
                            if (row) {
                                let columnData = row.split(',').map(function (item) {
                                    return item.replace(/['"]+/g, '');
                                });

                                //Create a new ordered columnData
                                let orderedData = [];
                                for (let i = 0; i < fieldsOrder.length; i++) {
                                    let fieldName = fieldsOrder[i];
                                    let fieldNumber = fieldNames[fieldName];
                                    // console.log(fieldNames[fieldName] + "=" + columnData[value]);
                                    orderedData.push(columnData[fieldNumber]);
                                }
                                addRowCompanyWithValue(orderedData, function (err) {
                                    if (err.length > 0) {
                                        errors = errors.concat(err);
                                    }
                                });
                            }

                        });

                        if (errors.length > 0) {
                            alert(translations['js.data_not_compliant_correct_manually']);
                        }

                        $('#nbRowImported').val(data.length - 1);
                    }
                    reader.onerror = function (e) {
                        alert(translations['js.file_contains_errors']);
                    }
                }
            });
        });
    </script>
{% endblock %}
