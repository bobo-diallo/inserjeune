{% if is_granted('ROLE_ADMIN') == true  or
    is_granted('ROLE_ADMIN_PAYS') == true  or
    is_granted('ROLE_ADMIN_REGIONS') == true  or
    is_granted('ROLE_ADMIN_VILLES') == true %} {% set base = 'base.html.twig' %}
{% elseif is_granted('ROLE_LEGISLATEUR') == true %} {% set base = 'base_legislator.html.twig' %}
{% elseif is_granted('ROLE_DIRECTEUR') == true %} {% set base = 'base_legislator.html.twig' %}
{% elseif is_granted('ROLE_ETABLISSEMENT') == true %} {% set base = 'base_school.html.twig' %}
{% elseif is_granted('ROLE_PRINCIPAL') == true %} {% set base = 'base_principal.html.twig' %}
{% else %} {% set base = 'base_company.html.twig' %}
{% endif %}

{% extends base %}

{% block title %}
    {{ parent() }} Company
{% endblock %}



{% block js %}
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBy9WBkxvkGzs4tQN-RilyvV6WvWnTInUM&callback"
            type="text/javascript">
    </script>
    <script>
        let translations = [];
        getTranslation().then (function (translation) {
            translations = translation;
            //Contrôle du bouton check de localisation pour switch manuel - automatique
            $('#appbundle_company_locationMode').on('click', async function () {
                if ($('#appbundle_company_locationMode').is(":checked")) {
                    if (!confirm(translations['js.warning_coordinates_recalculated'])) {
                        $('#appbundle_company_locationMode').prop("checked", false);
                    }
                } else {
                    alert(translations['js.manual_mode']);
                }

                //Mise à jour des coordonnées géographique en mode auto
                if ($('#appbundle_company_locationMode').is(":checked")) {
                    let mapAdresse = getCompanyMapAddress();
                    if (($('#appbundle_company_mapsAddress').val() != mapAdresse) ||
                        ($('#appbundle_company_latitude').val().length == 0) ||
                        ($('#appbundle_company_longitude').val().length == 0)) {
                        $('#appbundle_company_mapsAddress').val(mapAdresse);

                        //recherche des coordonnées avec l'adresse complète
                        if (await geocodeAddressLocation(getCompanyMapAddress(), '#appbundle_company_latitude', '#appbundle_company_longitude') == true) {
                            //recherche des coordonnées avec uniquement l'adresse de la ville
                            await geocodeAddressLocation(getCompanyMapAddress(), '#appbundle_company_latitude', '#appbundle_company_longitude')
                        }
                    }
                }
            });

            // Si la ville n'est pas déja sélectionnée, simule un click sur le Pays pour accéder aux Regions
            if ($('#selectedRegion option').length == 0) {
                if ($('#selectedCountry').val() !== '') {
                    //countryEvent("#selectedCountry", "company");
                }
            } else {
                //adaptation DBTA pour l'environnement struct_province_country
                // (pas de sélection possible sur le country, simule un click sur la region pour accéder au city)
                //regionEvent("#selectedCountry", "#selectedRegion", "company");
            }

            let idPrefix = '#appbundle_company_';
            let allActivities = getAllActivities('#allActivities');

            // Ecoute changement sur Pays et Region
            if(! $('#appbundle_company_prefecture').length) {
            listenChangeCountryRegion('#appbundle_company_country', '#appbundle_company_region', 'country', 'region', 'city')
            }

            // Event
            // Region -> Prefecture -> City
            else {
                listenChangeRegionPrefecture('#appbundle_company_country', '#appbundle_company_region', '#appbundle_company_prefecture', '#appbundle_company_city');
            }

            //simule le change sur le pays ou la province
            if(!$('#appbundle_company_city').val())
                $('#appbundle_company_country').trigger('change')
            //supprime les autres pays ou provinces
            $('#appbundle_company_country').find('option').not(':selected').remove();

            // Option STRUCT_PROVINCE_COUNTRY_CITY = true
            if ($('#selectedRegion option').length > 0) {
                setTimeout(function () {
                    // alert($('#selectedRegion option:selected').val())
                    $('#appbundle_company_region option[value="' + $('#selectedRegion option:selected').val() + '"]').prop('selected', true);
                    if(!$('#appbundle_company_city').val())
                        $('#appbundle_company_region').trigger('change');
                    //supprime les autres pays
                    $('#appbundle_company_region').find('option').not(':selected').remove();

                    // mode edition : mets a jour la ville
                    setTimeout(function () {
                        if($('#cityName')) {
                            $('#appbundle_company_city option[value= ' + $('#cityName').val() + ']').prop('selected', true)
                        }
                    }, 500);
                }, 1000);
            }

            // Event
            // Vérifie le numero de téléphone si different du userName
            // checkPhoneNumber($('#appbundle_company_phoneStandard').val());
            $('#appbundle_company_phoneStandard').on('change', function () {
                checkPhoneNumber($(this).val());
            })

            function checkPhoneNumber($phoneNumber) {
                let usrphone = $('.logged-user-phone').html().trim();

                // verification de l'indicatif pays
                let indCompany = '+' + $('#countryPhoneCode').val();
                let indPhone = $phoneNumber.substr(0, indCompany.length);

                if (indPhone != indCompany) {
                    alert(translations["js.warning,phone_must_begin_part1"] + " " + indCompany + " " + translations["js.warning,phone_must_begin_part2"]);
                    $('#appbundle_company_phoneStandard').val(usrphone);
                } else if ($phoneNumber != usrphone) {
                    let confirmPhone = confirm(translations["js.warning_log_in_with_this_new_number"] + " " + $phoneNumber)
                    if (confirmPhone == false) {
                        $('#appbundle_company_phoneStandard').val(usrphone);
                    }
                }
            }

            // Event
            // Modification test of submit button for RGPD
            if ($('#role').val() == 'ROLE_ENTREPRISE') {

                //désactive le boutton Valider tant que l'utilisateur n'a pas pris connaissance du RGPD
                if ($("#buttonCompany").html().replace(/ /g, "") == translations["js.validate"]) {
                    if ($('#appbundle_company_agreeRgpd').prop('checked')) {
                        $('#buttonCompany').attr("disabled", false);
                        $("#buttonCompany").text(translations["js.validate"]);
                    } else {
                        $('#buttonCompany').attr("disabled", true);
                        $("#buttonCompany").text(translations["js.accept_PDP_notice_for_valid"]);
                    }
                }

                $('#appbundle_company_agreeRgpd').on('change', function () {
                    // si acceptation RGPD
                    if ($('#appbundle_company_agreeRgpd').prop('checked')) {
                        $('#buttonCompany').removeAttr("disabled");
                        $("#buttonCompany").text(translations["js.validate"]);
                        $("#buttonCompany").css("background-color", "#2177e0");
                        $("#buttonCompany").css("border-color", "#2177e0");
                        // si refus RGPD
                    } else {
                        // formulaire Valid, suppression du compte
                        if ($("#form_company").valid()) {
                            $("#buttonCompany").text(translations["js.delete_my_account"]);
                            $("#buttonCompany").css("background-color", "red");
                            $("#buttonCompany").css("border-color", "red");
                            alert(translations["js.warning_delete_all_personal_data"]);
                            // formulaire non rempli, retour situation initiale
                        } else {
                            $('#buttonCompany').attr("disabled", true);
                            $("#buttonCompany").text(translations["js.accept_PDP_notice_for_valid"]);
                        }
                    }
                });
            }


        });

        function getCompanyMapAddress() {
            let number = $('#appbundle_company_addressNumber').val();
            let road = $('#appbundle_company_addressRoad').val();
            let locality = $('#appbundle_company_addressLocality').val();
            let city = $('#appbundle_company_city option:selected').text();
            let region = $('#appbundle_company_region option:selected').text();
            let country = $('#appbundle_company_country option:selected').text();

            // console.log("test", $('#appbundle_company_country option'));
            // adaptation dbta, annulation de la donnée de la province
            if($('#selectedRegion option').length > 0) {
                country = "";
            }
            // console.log(number, road, locality, city, region, country);
            return (createMapsAddress(number, road, locality, city, region, country));
        }

        function getCompanyCityMapAddress() {
            let city = $('#appbundle_company_addressCity option:selected').text();
            let country = $('#appbundle_company_country option:selected').text();
            return (createMapsAddress(null, null, null, city, null, country));
        }

        async function preventDefaultSubmit() {
            // mise à jour mapAdresse et calcul des lat et longitude en mode auto
            // -----------------------------------------------------
            if ($('#appbundle_company_locationMode').not(":checked")) {
                if (($('#appbundle_company_latitude').val() == null) ||
                    ($('#appbundle_company_latitude').val() == 0) ||
                    ($('#appbundle_company_longitude').val() == null) ||
                    ($('#appbundle_company_longitude').val() == 0)) {
                    $('#appbundle_company_locationMode').prop('checked', true)
                }
            }
            if ($('#appbundle_company_locationMode').is(":checked")) {
                let mapAdresse = getCompanyMapAddress();

                if (($('#appbundle_company_mapsAddress').val() != mapAdresse) ||
                    ($('#appbundle_company_latitude').val().length == null) ||
                    ($('#appbundle_company_latitude').val().length == 0) ||
                    ($('#appbundle_company_longitude').val().length == null) ||
                    ($('#appbundle_company_longitude').val().length == 0)) {
                    $('#appbundle_company_mapsAddress').val(mapAdresse);

                    //recherche des coordonnées avec l'adresse complète
                    if (await geocodeAddressLocation(getCompanyMapAddress(), '#appbundle_company_latitude', '#appbundle_company_longitude') == true) {
                        //recherche des coordonnées avec uniquement l'adresse de la ville
                        await geocodeAddressLocation(getCompanyCityMapAddress(), '#appbundle_company_latitude', '#appbundle_company_longitude')
                    }

                    // vérifie si les coordonnées pas déjà utilisées avec autre établissement
                    let url = window.location.toString();
                    url = url.replace('/edit', '/getCompaniesByCoordinates');
                    // alert(url);

                    //creation de la data pour json
                    let current_latitude = $('#appbundle_company_latitude').val();
                    let current_longitude = $('#appbundle_company_longitude').val();
                    let gap = 0.0001;
                    let data = {
                        "latitude": current_latitude,
                        "longitude": current_longitude,
                        "gap": gap,
                    };

                    // appel ajax en get
                    await $.get(url, data).done(function (result) {
                        let current_id = result['company_id'];
                        let coordinates = result['coordinates'];
                        console.log('current Id = ' + current_id);
                        console.log(coordinates["latitude"] + "," + coordinates["longitude"]);

                        // mise à jour des coordonnées recalculées
                        $('#appbundle_company_latitude').val(coordinates["latitude"]);
                        $('#appbundle_company_longitude').val(coordinates["longitude"]);
                        $('#appbundle_company_locationMode').prop("checked", false);
                    });

                    setTimeout(function () { //attente 1 seconde pour réponse google Maps geocoder avant le submit
                        console.log('Coordonnees map recupérées ....');
                        $('#submitCompany').trigger('click');
                    }, 2000)
                } else {
                    $('#submitCompany').trigger('click');
                }
            } else {
                $('#submitCompany').trigger('click');
            }
        }
    </script>
{% endblock %}
