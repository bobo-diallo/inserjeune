{% extends 'persondegree/content.html.twig' %}
{% block css %}
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">

{% endblock %}

{% set roleUser = app.user.roles | role%}

{% block body %}
    <style>
        .clearfix {
            height: 15px;
            display: block;
        }
        .btn-primary {
            color: #fff !important;
            background-color: #007bff !important;
            border-color: #007bff !important;
        }
        tbody td {
            white-space: nowrap;;
        }
        tbody td .red-color {
            color: #ee0808; !important;
        }
        tbody td .blue-color {
            color: #0300ee; !important;
        }

    </style>
    <div class="content-i">
        <div class="content-box">
            <div class="element-wrapper">
                {%  if roleUser =="Administrateur" %}
                    <img src="{{ asset('build/images/icon/degree.png') }}" alt="locality" class="title-icon" style="margin-bottom: -35px;">
                {% endif %}
                <h6 class="element-header">{{ 'degree.list_of_degree' | trans }}</h6>
                <div class="element-box">
                    {%  if roleUser =="Administrateur" %}
                        <div class="controls-above-table">
                            <div class="row">
                                <div class="col-sm-6">
                                </div>
                            </div>
                        </div>
                    {% endif %}
                    <div class="table-responsive">
                        <div class="table-responsive">
                            <div id="persondegree">Loading...</div>
                        </div>
                        <table id="" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%; max-width: 600px;">
                            <thead><tr>
                                <th style="text-align: center" >{{ 'menu.legend' | trans }}</th>
                                <th style="text-align: center" >{{ 'menu.under_study' | trans }}</th>
                                <th style="text-align: center" >{{ 'menu.waiting_6_months' | trans }}</th>
                                <th style="text-align: center" >{{ 'menu.1st_reminder' | trans }}</th>
                                <th style="text-align: center" >{{ 'menu.2nd_reminder' | trans }}</th>
                                <th style="text-align: center" >{{ 'menu.answer_ok' | trans }}</th>
                            </tr></thead>
                            <tbody><tr>
                                <td style="text-align: center;">{{ 'menu.survey' | trans }}</td>
                                <td><div style="width: 60px; height: 10px; background-color: #FFABC4; margin: auto"></div></td>
                                <td><div style="width: 60px; height: 10px; background-color: #FFFFFF; border: 1px solid #0c0c0c; margin: auto"></div></td>
                                <td><div style="width: 60px; height: 10px; background-color: #FF7100; margin: auto"></div></td>
                                <td><div style="width: 60px; height: 10px; background-color: #FF0000; margin: auto"></div></td>
                                <td><div style="width: 60px; height: 10px; background-color: #00FF00; margin: auto"></div></td>
                            </tr></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block js %}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>

    <script src="{{ asset('bundles/datatables/js/datatables.js') }}"></script>
    <script>

        /**
         * Export only the text content of a node
         * @param node
         * @returns {*|jQuery}
         */
        function extractExportText(node) {
            let span = $(node).find('span[id^="spanType"]');
            if (span.length) {
                return span.text().trim();
            }
            return $(node).text().trim();
        }

        // Datatables
        $(document).ready(function () {
            let title = $('h6.element-header').first().text();
            $('#persondegree').addClass('table table-striped table-bordered dt-responsive nowrap dataTable no-footer')
            $('#persondegree').initDataTables({{ datatable_settings(datatable) }}, {
                searching: true,
                dom: '<"row"<"col-12 text-center"B>>' +
                    '<"row"<"col-12"><"clearfix">>' +
                    'lfrtip',
                buttons: [
                    {
                        extend: 'csv',
                        text: '<i class="fas fa-file-csv"></i> Export CSV',
                        className: 'btn btn-primary btn-dashboard rounded buttons-csv buttons-html5',
                        title: title,
                        exportOptions: {
                            columns: ':not(.no-print)',
                            format: { body: function (data, row, column, node) { return extractExportText(node); } }
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="fa fa-file-excel"></i> Export Excel',
                        className: 'btn btn-primary btn-dashboard rounded buttons-excel buttons-html5',
                        title: title,
                        exportOptions: {
                            columns: ':not(.no-print)',
                            format: { body: function (data, row, column, node) { return extractExportText(node); } }
                        }
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i> Export PDF',
                        className: 'btn btn-primary btn-dashboard rounded buttons-pdf buttons-html5',
                        title: title,
                        exportOptions: {
                            columns: ':not(.no-print)',
                            format: { body: function (data, row, column, node) { return extractExportText(node); } }
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i> Print',
                        className: 'btn btn-primary btn-dashboard rounded buttons-print buttons-html5',
                        title: title,
                        exportOptions: {
                            columns: ':not(.no-print)',
                            format: { body: function (data, row, column, node) { return extractExportText(node); } }
                        }
                    }
                ]
            });

        })

        let translations = [];
        getTranslation().then (function (translation) {
            translations = translation;
        });
        //event
        $('.selectType').change(function () {
            changeSelectTypeVisibility ($(this));
        });

        function changeSelectTypeVisibility (selectType) {
            let personDegreeId = selectType.attr("id").replaceAll("selectType","");

            if ($('#selectType' + personDegreeId + ' option:selected').val() == "TYPE_TRAINING")  {
                $('#spanDip' + personDegreeId).hide();
                $('#selectMonth' + personDegreeId).hide();
                $('#selectYear' + personDegreeId).hide();
            } else {
                $('#spanDip' + personDegreeId).show();
                $('#selectMonth' + personDegreeId).show();
                $('#selectYear' + personDegreeId).show();
            }
        }

        function changePhoneMobile1 (personDegreeId) {
            $('#changePhoneMobile1' + personDegreeId).hide();
            $('#savePhoneMobile1' + personDegreeId).show();
            $('#cancelPhoneMobile1' + personDegreeId).show();
            // $('#spanPhoneMobile1' + personDegreeId).hide();
            $('#inputPhoneMobile1' + personDegreeId).show();
            $('#inputPhoneMobile1' + personDegreeId).val($('#spanPhoneMobile1' + personDegreeId).text());
        }

        function cancelPhoneMobile1(personDegreeId) {
            $('#changePhoneMobile1' + personDegreeId).show();
            $('#savePhoneMobile1' + personDegreeId).hide();
            $('#cancelPhoneMobile1' + personDegreeId).hide();
            // $('#spanPhoneMobile1' + personDegreeId).show();
            $('#inputPhoneMobile1' + personDegreeId).hide();
        }

        function savePhoneMobile1(personDegreeId) {
            if($('#inputPhoneMobile1' + personDegreeId).val() != $('#spanPhoneMobile1' + personDegreeId).text()) {
                if (confirm(translations['js.sure_to_modify_tel_number'])) {
                    let locationref = window.location.href.split('#')[0].replace("persondegrees", "");
                    let data = {};
                    data['id'] = personDegreeId
                    data['phoneMobile1'] = $('#inputPhoneMobile1' + personDegreeId).val();

                    $.get(locationref + 'changePersonDegreePhoneMobile1', data).done(function (result) {
                        if (result == "OK") {
                            $('#changePhoneMobile1' + personDegreeId).show();
                            $('#savePhoneMobile1' + personDegreeId).hide();
                            $('#cancelPhoneMobile1' + personDegreeId).hide();
                            $('#inputPhoneMobile1' + personDegreeId).hide();
                            $('#spanPhoneMobile1' + personDegreeId).text(data['phoneMobile1']);
                        } else {
                            alert(translations['js.error_phone_number_already_used'])
                        }
                    });
                }
            }
        }

        // initialisation Email
        function changeEmail(personDegreeId) {
            $('#changeEmail' + personDegreeId).hide();
            $('#saveEmail' + personDegreeId).show();
            $('#cancelEmail' + personDegreeId).show();
            // $('#spanEmail' + personDegreeId).hide();
            $('#inputEmail' + personDegreeId).show();
            $('#inputEmail' + personDegreeId).val($('#spanEmail' + personDegreeId).text());
        }

        function cancelEmail(personDegreeId) {
            $('#changeEmail' + personDegreeId).show();
            $('#saveEmail' + personDegreeId).hide();
            $('#cancelEmail' + personDegreeId).hide();
            // $('#spanEmail' + personDegreeId).show();
            $('#inputEmail' + personDegreeId).hide();
        }

        function saveEmail(personDegreeId) {
            if($('#inputEmail' + personDegreeId).val() != $('#spanEmail' + personDegreeId).text()) {
                // debugger;
                if (confirm(translations['js.sure_to_modify_email'])) {
                    let locationref = window.location.href.split('#')[0].split('#')[0].replace("persondegrees", "");
                    let data = {};
                    data['id'] = personDegreeId
                    data['email'] = $('#inputEmail' + personDegreeId).val();

                    console.log('url:::::', locationref + 'changePersonDegreeEmail')
                    $.get(locationref + 'changePersonDegreeEmail', data).done(function (result) {
                        if (result == "OK") {
                            $('#changeEmail' + personDegreeId).show();
                            $('#saveEmail' + personDegreeId).hide();
                            $('#cancelEmail' + personDegreeId).hide();
                            $('#inputEmail' + personDegreeId).hide();
                            $('#spanEmail' + personDegreeId).text(data['email']);
                        } else {
                            alert(translations['js.error_email_already_used'])
                        }
                    });
                }
            }
        }


        // initialisation Email
        function changeType(personDegreeId) {
            $('#changeType' + personDegreeId).hide();
            $('#saveType' + personDegreeId).show();
            $('#cancelType' + personDegreeId).show();
            $('#selectType' + personDegreeId).show();
            changeSelectTypeVisibility ($('#selectType' + personDegreeId));

            let spanText = $('#spanType' + personDegreeId).text();
            $('#selectType' + personDegreeId + ' option:contains(' + spanText + ')').prop("selected", true)

            let degreeDate = $('#degreeDate' + personDegreeId).text().split('/');
            console.log(degreeDate);
            if(degreeDate.length == 2) {
                $('#selectMonth' + personDegreeId + ' option[value="'+ Number(degreeDate[0]) + '"]').prop("selected", true)
                $('#selectYear' + personDegreeId + ' option[value="'+ Number(degreeDate[1]) + '"]').prop("selected", true)
            }
        }

        function cancelType(personDegreeId) {
            $('#changeType' + personDegreeId).show();
            $('#saveType' + personDegreeId).hide();
            $('#cancelType' + personDegreeId).hide();
            $('#selectType' + personDegreeId).hide();
            $('#spanType' + personDegreeId).show();
            $('#spanDip' + personDegreeId).hide();
            $('#selectMonth' + personDegreeId).hide();
            $('#selectYear' + personDegreeId).hide();
            console.log('test: ' + $('#selectType' + personDegreeId).val() + ' | ' + $('#spanType' + personDegreeId).text());
        }

        function saveType(personDegreeId) {
            if ($('#selectType' + personDegreeId + ' option:selected').val() == $('#spanType' + personDegreeId).text()) {
                cancelType(personDegreeId);

            } else {
                if (confirm(translations['js.sure_to_modify_professional_situation'])) {
                    let locationref = window.location.href.split('#')[0].replace("persondegrees", "");
                    // console.log(locationref);
                    let data = {};
                    data['id'] = personDegreeId
                    data['type'] = $('#selectType' + personDegreeId + ' option:selected').attr('value');
                    if ($('#selectType' + personDegreeId + ' option:selected').val() != "TYPE_TRAINING") {
                        data['month'] = $('#selectMonth' + personDegreeId + ' option:selected').attr('value');
                        data['year'] = $('#selectYear' + personDegreeId + ' option:selected').attr('value');
                    }

                    $.get(locationref + 'changePersonDegreeType', data).done(function (result) {
                        if (result == "OK") {
                            $('#spanType' + personDegreeId).text($('#selectType' + personDegreeId + ' option:selected').text() );
                            cancelType(personDegreeId);
                            location.reload();
                        } else {
                            alert(translations[result]);
                        }
                    });
                }
            }
        }
    </script>
{% endblock %}
