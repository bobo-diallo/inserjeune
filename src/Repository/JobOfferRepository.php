<?php

namespace App\Repository;

use App\Entity\JobOffer;
use App\Entity\School;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use App\Entity\Company;
use Doctrine\Persistence\ManagerRegistry;

/**
 * JobOfferRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobOfferRepository extends ServiceEntityRepository {
	public function __construct(ManagerRegistry $registry) {
		parent::__construct($registry, JobOffer::class);
	}

	/**
	 * @return JobOffer[]
	 */
	public function getAllJobOffer(): array {
		return $this->createQueryBuilder('j')
			->orderBy('j.createdDate', 'DESC')
			->getQuery()
			->getResult();
	}

	/**
	 * @param Company $company
	 * @return JobOffer[]
	 */
	public function othersJobs(Company $company): array {
		return $this->createQueryBuilder('j')
			->leftJoin('j.company', 'c', 'WITH', 'c.id != :company')
			->setParameter('company', $company)
			->orderBy('j.id', 'DESC')
			->getQuery()
			->getResult();
	}

	/**
	 * @param School $school
	 * @return JobOffer[]
	 */
	public function othersDifferentOfSchool(School $school): array {
		return $this->createQueryBuilder('j')
			->leftJoin('j.school', 's', 'WITH', 's.id != :school')
			->setParameter('school', $school->getId())
			->orderBy('j.id', 'DESC')
			->getQuery()
			->getResult();
	}

	/**
	 * @return array
	 */
	public function getByEmptyEndedDate(): array {
		return $this->createQueryBuilder('j')
			->where('j.closedDate IS NULL')
			->getQuery()
			->getResult();
	}

	public function markJobOfferView(int $jobOfferId, bool $isView): void {
		$jobOffer = $this->find($jobOfferId);
		$jobOffer->setIsView($isView);

		$this->_em->persist($jobOffer);
		$this->_em->flush();
	}
}
