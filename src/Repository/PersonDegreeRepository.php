<?php

namespace App\Repository;

use App\Entity\Degree;
use App\Entity\PersonDegree;
use App\Entity\School;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use App\Entity\Activity;
use App\Entity\City;
use App\Entity\Country;
use App\Entity\Region;
use App\Entity\SectorArea;
use Doctrine\Persistence\ManagerRegistry;

/**
 * PersonDegreeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonDegreeRepository extends ServiceEntityRepository {
	public function __construct(ManagerRegistry $registry) {
		parent::__construct($registry, PersonDegree::class);
	}

	/**
	 * @param Country $country
	 * @return PersonDegree[]
	 */
	public function getNameByCountry(Country $country): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country')
			->setParameter('country', $country)
			->getQuery()
			->getResult();
	}

	/**
	 * @param Region $region
	 * @return PersonDegree[]
	 */
	public function getNameByRegion(Region $region): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region')
			->setParameter('region', $region)
			->getQuery()
			->getResult();
	}

	/**
	 * @param City $city
	 * @return PersonDegree[]
	 */
	public function getNameByCity(City $city): array {
		return $this->createQueryBuilder('s')
			->where('s.addressCity = :city')
			->setParameter('city', $city)
			->getQuery()
			->getResult();
	}

	/**
	 * @param SectorArea $sectorArea
	 * @return PersonDegree[]
	 */
	public function getBySectorArea(SectorArea $sectorArea): array {
		return $this->createQueryBuilder('s')
			->where('s.sectorArea = :sector_area')
			->setParameter('sector_area', $sectorArea)
			->getQuery()
			->getResult();
	}

	/**
	 * @param Country $country
	 * @param SectorArea $sectorArea
	 * @return PersonDegree[]
	 */
	public function getByCountryAndSectorArea(Country $country, SectorArea $sectorArea): array {
		return $this->createQueryBuilder('pd')
			->where('pd.country = :country ')
			->andWhere('pd.sectorArea = :sectorArea')
			->setParameters(['country' => $country, 'sectorArea' => $sectorArea])
			->getQuery()
			->getResult();
	}

	/**
	 * @param Region $region
	 * @param SectorArea $sectorArea
	 * @return PersonDegree[]
	 */
	public function getByRegionAndSectorArea(Region $region, SectorArea $sectorArea): array {
		return $this->createQueryBuilder('pd')
			->where('pd.region = :region ')
			->andWhere('pd.sectorArea = :sectorArea')
			->setParameters(['region' => $region, 'sectorArea' => $sectorArea])
			->getQuery()
			->getResult();
	}

	/**
	 * @param Activity $activity
	 * @return PersonDegree[]
	 */
	public function getByActivity(Activity $activity): array {
		return $this->createQueryBuilder('s')
			->where('s.activity = :activity')
			->setParameter('activity', $activity)
			->getQuery()
			->getResult();
	}

	/**
	 * @param Activity $activity
	 * @return PersonDegree[]
	 */
	public function getByOtherActivity(Activity $activity): array {
		return $this->createQueryBuilder('s')
			->where('s.activity = :activity')
			->setParameter('activity', $activity)
			->getQuery()
			->getResult();
	}

	/**
	 * @param string $type
	 * @return PersonDegree[]
	 */
	public function getByType(string $type): array {
		return $this->createQueryBuilder('s')
			->where('s.type = :type')
			->setParameter('type', $type)
			->getQuery()
			->getResult();
	}

	/**
	 * @param string $contract
	 * @return PersonDegree[]
	 */
	public function getByContract(string $contract): array {
		return $this->createQueryBuilder('s')
			->where('s.contract = :contract')
			->setParameter('contract', $contract)
			->getQuery()
			->getResult();
	}

	/**
	 * @param Country $country
	 * @param string $type
	 * @return PersonDegree[]
	 */
	public function getByCountryAndType(Country $country, string $type): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.type = :type')
			->setParameters(['country' => $country, 'type' => $type])
			->getQuery()
			->getResult();
	}

	/**
	 * @param Region $region
	 * @param string $type
	 * @return PersonDegree[]
	 */
	public function getByRegionAndType(Region $region, string $type): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.type = :type')
			->setParameters(['region' => $region, 'type' => $type])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByFirstNameAndLastNameAndBirthDate(
		string    $firstName,
		string    $lastName,
		?\DateTime $birthDate
	): array {
		return $this->createQueryBuilder('s')
			->where('s.firstname = :firstname ')
			->andWhere('s.lastname = :lastname')
			->andWhere('s.birthDate = :birthDate')
			->setParameters(['firstname' => $firstName, 'lastname' => $lastName, 'birthDate' => $birthDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByFirstNameAndLastNameAndBirthDateAndCreatedDate(
		string    $firstName,
		string    $lastName,
		?\DateTime $birthDate,
		?\DateTime $createdDate
	): array {
		return $this->createQueryBuilder('s')
			->where('s.firstname = :firstname ')
			->andWhere('s.lastname = :lastname')
			->andWhere('s.birthDate = :birthDate')
			->andWhere('s.createdDate = :createdDate')
			->setParameters([
				'firstname' => $firstName,
				'lastname' => $lastName,
				'birthDate' => $birthDate,
				'createdDate' => $createdDate
			])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByFirstnameAndLastameAndCreatedDate(
		string    $firstname,
		string    $lastname,
		?\DateTime $createdDate
	): array {
		return $this->createQueryBuilder('s')
			->where('s.firstname = :firstname')
			->andWhere('s.lastname = :lastname')
			->andWhere('s.createdDate = :createdDate')
			->setParameters(['firstname' => $firstname, 'lastname' => $lastname, 'createdDate' => $createdDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByCountryAndSchool(Country $country, School $school): array {
		return $this->createQueryBuilder('pd')
			->where('pd.country = :country ')
			->andWhere('pd.school = :school')
			->setParameters(['country' => $country, 'school' => $school])
			->getQuery()
			->getResult();
	}

	public function getByCountryBetweenCreatedDateAndEndDate (
		Country $country,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere ('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'beginDate'=> $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	public function getByCountryAndSchoolBetweenCreatedDateAndEndDate (
		Country $country,
		?School $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere ('s.school = :school ')
			->andWhere ('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters([
				'country' => $country,
				'school' => $school,
				'beginDate'=> $beginDate,
				'endDate' => $endDate
			])
			->getQuery()
			->getResult();
	}

	public function getByRegionBetweenCreatedDateAndEndDate(
		Region $region,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere ('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'beginDate'=> $beginDate, 'endDate'=>$endDate])
			->getQuery()
			->getResult();
	}


	public function getByRegionAndSchoolBetweenCreatedDateAndEndDate(
		Region $region,
		?School $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere ('s.school = :school ')
			->andWhere ('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'school' => $school, 'beginDate'=> $beginDate, 'endDate'=>$endDate])
			->getQuery()
			->getResult();
	}

	public function getByCountryAndTypeBetweenCreatedDateAndEndDate(
		Country $country,
		string $type,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.type = :type')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'type' => $type, 'beginDate'=> $beginDate, 'endDate'=>$endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByCountryAndTypeAndSchoolBetweenCreatedDateAndEndDate(
		Country   $country,
		string    $type,
		School    $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.type = :type')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'type' => $type, 'school' => $school, 'beginDate'=> $beginDate, 'endDate'=>$endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByRegionAndTypeBetweenCreatedDateAndEndDate(
		Region    $region,
		string    $type,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.type = :type')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'type' => $type, 'beginDate'=> $beginDate, 'endDate'=>$endDate])
			->getQuery()
			->getResult();
	}


	/**
	 * @param Region $region
	 * @param School $school
	 * @return PersonDegree[]
	 */
	public function getByRegionAndSchool(Region $region, School $school): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.school = :school')
			->setParameters(['region' => $region, 'school' => $school])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByRegionAndTypeAndSchoolBetweenCreatedDateAndEndDate(
		Region    $region,
		string    $type,
		School    $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.type = :type')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'type' => $type, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByCountryAndSectorAreaBetweenCreatedDateAndEndDate(
		Country    $country,
		SectorArea $sectorArea,
		?\DateTime  $beginDate,
		?\DateTime  $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.sectorArea = :sectorArea')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'sectorArea' => $sectorArea, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByCountryAndSectorAreaAndSchoolBetweenCreatedDateAndEndDate(
		Country    $country,
		SectorArea $sectorArea,
		School     $school,
		?\DateTime  $beginDate,
		?\DateTime  $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.sectorArea = :sectorArea')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'sectorArea' => $sectorArea, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByRegionAndSectorAreaBetweenCreatedDateAndEndDate(
		Region     $region,
		SectorArea $sectorArea,
		?\DateTime  $beginDate,
		?\DateTime  $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.sectorArea = :sectorArea')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'sectorArea' => $sectorArea, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByRegionAndSectorAreaAndSchoolBetweenCreatedDateAndEndDate(
		Region     $region,
		SectorArea $sectorArea,
		School     $school,
		?\DateTime  $beginDate,
		?\DateTime  $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.sectorArea = :sectorArea')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'sectorArea' => $sectorArea, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getBySectorAreaBetweenCreatedDateAndEndDate(
		SectorArea $sectorArea,
		?\DateTime  $beginDate,
		?\DateTime  $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.sectorArea = :sector_area')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['sector_area' => $sectorArea, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getBySectorAreaAndSchoolBetweenCreatedDateAndEndDate(
		SectorArea $sectorArea,
		School     $school,
		?\DateTime  $beginDate,
		?\DateTime  $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.sectorArea = :sector_area')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->andWhere('s.school = :school')
			->setParameters(['sector_area' => $sectorArea, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByActivityBetweenCreatedDateAndEndDate(
		Activity  $activity,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.activity = :activity')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['activity' => $activity, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByActivityAndSchoolBetweenCreatedDateAndEndDate(
		Activity  $activity,
		School    $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.activity = :activity')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['activity' => $activity, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByTypeBetweenCreatedDateAndEndDate(
		string    $type,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.type = :type')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['type' => $type, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}
	/**
	 * @param string $type
	 * @param School $school
	 * @return PersonDegree[]
	 */
	public function getByTypeAndSchool(string $type, School $school): array {
		return $this->createQueryBuilder('s')
			->where('s.type = :type')
			->andWhere('s.school = :school')
			->setParameters(['type'=> $type, 'school' => $school])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByTypeAndSchoolBetweenCreatedDateAndEndDate(
		string    $type,
		School    $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.type = :type')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['type' => $type, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByCountryAndDegreeBetweenCreatedDateAndEndDate(
		Country   $country,
		Degree    $degree,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.degree = :degree')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'degree' => $degree, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByCountryAndDegreeAndSchoolBetweenCreatedDateAndEndDate(
		Country   $country,
		Degree    $degree,
		School    $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.country = :country ')
			->andWhere('s.degree = :degree')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['country' => $country, 'degree' => $degree, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByRegionAndDegreeBetweenCreatedDateAndEndDate(
		Region    $region,
		Degree    $degre,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.degree = :degree')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'degree' => $degre, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @return PersonDegree[]
	 */
	public function getByRegionAndDegreeAndSchoolBetweenCreatedDateAndEndDate(
		Region    $region,
		Degree    $degree,
		School    $school,
		?\DateTime $beginDate,
		?\DateTime $endDate): array {
		return $this->createQueryBuilder('s')
			->where('s.region = :region ')
			->andWhere('s.degree = :degree')
			->andWhere('s.school = :school')
			->andWhere('s.createdDate BETWEEN :beginDate AND :endDate')
			->setParameters(['region' => $region, 'degree' => $degree, 'school' => $school, 'beginDate' => $beginDate, 'endDate' => $endDate])
			->getQuery()
			->getResult();
	}

	/**
	 * @param School $school
	 * @param boolean $unlocked
	 * @return PersonDegree[]
	 */
	public function getBySchoolAndByUnlocked(School $school, bool $unlocked): array {
		return $this->createQueryBuilder('s')
			->where('s.school = :school ')
			->andWhere('s.unlocked = :unlocked')
			->setParameters(['school' => $school, 'unlocked' => $unlocked])
			->getQuery()
			->getResult();
	}
}
